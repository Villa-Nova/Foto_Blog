/* Config */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root {
  font-size: 62.5%;

  --hue: 240;
  
  --color-base-white: hsl(0, 0%, 100%);
  --color-base-gray-100: hsl(0, 0%, 96%);
  --color-base-gray-300: hsl(var(--hue), 6%, 58%);
  --color-base-gray-500: hsl(0, 0%, 24%);
  --color-base-gray-900: hsl(var(--hue), 6%, 13%);

  font-family: 'Mulish', sans-serif;
}

html, body, input {
  font-family: 'Mulish', sans-serif;
}

body {
  font-size: 1.6rem;
  color: var(--color-base-gray-900);

  background-color: var(--color-base-white);
}

/* Set content */

#app {
  height: 100vh;

  display: grid;
  /* Ele adapta a altura do header e do footer à medida que é adicionado conteúdo, o restante é "reservado" para o main. */
  grid-template-rows: max-content 1fr max-content;
}

.container {
  padding: 1.6rem 3.2rem;

  /* Pega 100% da largura até um máximo de 1120px */
  width: min(112rem, 100%);
  margin: 0 auto;
}

main {
  overflow-y: scroll;
  background-color: var(--color-base-gray-100);
}

/* Header */

header {
  --moveY: -100%;
  animation: move .8s ease-out;
}

header, 
nav, 
nav ul {
  display: flex;
  align-items: center;
  gap: 7.2rem;

  font-weight: 700;
}

header form {
  flex: 1;
}

.camera:hover {
  animation: blink .3s backwards;
}

nav ul {
  list-style: none;
  font-size: 1.8rem;
  color: var(--color-base-gray-300);
}

ul li.active {
  color: var(--color-base-gray-900);
}

.input-wrapper label {
  width: 1px;
  height: 1px;
  overflow: hidden;
  position: absolute;
}

.input-wrapper input {
  width: 100%;
  padding: 1.6rem;

  background-color: var(--color-base-gray-100);
  border: 0;
  border-radius: .6rem;

  font-size: 1.6rem;
  font-weight: 600;
}

.input-wrapper input:focus {
  outline: 1px solid var(--color-base-gray-300);
}

.input-wrapper input::placeholder {
  opacity: 0.56;
  color: var(--color-base-gray-500);
}

.avatar {
  width: 4.2rem;
  height: 4.2rem;

  object-fit: cover;

  border-radius: 50%;
  transition: all .3s ease-in;
}

.avatar:hover {
  transform: scale(1.1);
  box-shadow: 0px 0px 20px var(--color-base-gray-900);
}

/* Gallery */

main h1 {
  padding: 1.6rem;
  font-size: 2.4rem;
}

.gallery {
  margin-top: 3.2rem;

  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2.2rem;
}

.card {
  background-color: var(--color-base-white);
  border-radius: .8rem;
  overflow: hidden;

  /* Os valores dos outros cards foram definidos no html */
  --delay: .4s;
  animation: appear .4s var(--delay) backwards;
  transition: all .4s ease-out;
}

.card img {
  width: 100%;
  aspect-ratio: 16/9;
  object-fit: cover;
  display: block;

  /* 
    ease-in: devagar nocomeço e rapido no final
    ease-out: rapido no começo e devagar no final
    ease-in-out: O meo da animação é mais demorado 
  */
  transition: filter .3s ease-in-out, transform .4s ease-out;
  filter: grayscale(40%);
}

.card:hover img {
  filter: grayscale(0%) contrast(101%) saturate(150%);
  transform: scale(1.1);
}

.container:has(.card:hover) .card:not(:hover) {
  filter: grayscale(100%);
  transform: scale(.95);
}

.details {
  padding: 2.2rem;
}

.details h2 {
  font-size: 1.8rem;
}

.tags {
  margin-top: 1.2rem;
}

.tags span {
  padding: .6rem;
  background-color: var(--color-base-gray-100);
  border-radius: .4rem;

  line-height: 0;
  font-size: 1.2rem;
  text-transform: uppercase;
}

footer {
  text-align: center;
  padding: 1.6rem;
  font-weight: 600;

  /* Variavel p/ reaproveitar a mesma animação */
  --moveY: 100%; 
  animation: move .8s ease-out;
}

@keyframes move {
  0% {
    opacity: 0;
    transform: translateY(var(--moveY));
  }
}

@keyframes appear {
  0% {
    opacity: 0;
    transform: scale(0.7);
  }

  50% {
    transform: scale(1.2);
  }
}

@keyframes blink {
  0%, 100% {
    opacity: .1;
  }

  50% {
    opacity: 1;
  }
}